try(setwd("/Users/rafalopezv/Dropbox/R/Third-assignment/")
try(setwd("/Users/rafalopezv/Dropbox/R/Third-assignment/"))
try(setwd("/Users/rafalopezv/Dropbox/R/Third-assignment/"))
getwd()
library(rio)
library(data.table)
library(Quandl)
library(devtools)
install.packages("Quandl")
library(Quandl)
library(Quandl)
?citation
library(bibtex)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
View(main)
data.frame(main)
main["MY_NEW_COLUMN"] <- 'singapore'
names(main) <- c("date", "gdp per capita","country")
main[,c(3,2,1)]
MyData <- read.csv2(file="ObservationData_wvdxeeg.csv", header=TRUE, sep = ",", nrows = 17, skip = 32)
View(MyData)
a <- "https://data.gov.sg/dataset/7f0661dc-6e4f-460f-8e8c-3514c9a8cb6b/resource/552b8662-3cbc-48c0-9fbb-abdc07fb377a/download/public-transport-utilisation-average-public-transport-ridership.csv"
trans.ut <- repmis::source_data(a)
View(trans.ut)
View(trans.ut)
names(trans.ut) <- c("year","type","average.1000.day")
b <- "https://data.gov.sg/dataset/e2673131-f79f-43e3-9579-c17cc25e1735/resource/31ca0cee-6d9e-453a-8b4f-376d37713a10/download/motor-vehicle-population-by-type-of-vehicle-end-of-period-annual.csv"
car.pop <- repmis::source_data(b)
View(car.pop)
names(car.pop) <- c("year", "type", "number")
class(trans.ut)
class(trans.ut$average.1000.day)
class(trans.ut$year)
class(trans.ut$type)
class(car.pop)
class(car.pop$number)
class(car.pop$number)
class(car.pop$year)
class(car.pop$type)
class(car.pop$number)
d <- data.frame(char = letters[1:5],
fake.char = as.character(1:5),
char.fac = factor(letters[1:5]),
num = 1:5, stringsAsFactors = FALSE)
View(d)
?sapply
sapply(d, mode)
sapply(d, class)
sapply(car.pop, class)
sapply(trans.ut, class)
d <- data.frame(char = letters[1:5],
fake.char = as.character(1:5),
fac = factor(1:5),
char.fac = factor(letters[1:5]),
num = 1:5, stringsAsFactors = FALSE)
d
sapply(d, mode)
sapply(d, class)
sapply(car.pop, class)
transform(car.pop, car.pop$number = as.numeric(number)
transform(car.pop, car.pop$number = as.numeric(number))
transform(car.pop, car.pop$number = as.numeric)
transform(car.pop, number = as.numeric(number))
View(d)
names(trans.ut)[2,3] <- paste("t","a")
names(trans.ut)[2:3] <- paste("t","a")
names(trans.ut) <- c("year","type","average.1000.day")
```{r setup, include=FALSE, error=FALSE, message=FALSE, results = 'asis'}
knitr::opts_chunk$set(echo = TRUE)
#setting working directory
getwd()
try(setwd('/Users/emiliasicari/Desktop/Third-assignment-'), silent = TRUE)
try(setwd("/Users/rafalopezv/Dropbox/R/Third-assignment/"), silent = TRUE)
#loading packages or installing them if not already available
library(devtools)
library(Quandl)
library(data.table)
library(rio)
library(ggplot2)
# importing data on Singapore's economic growth, selecting only the time span of interest
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
gdp.pc <- repmis::source_data(URL, header = TRUE, nrows=21, skip = 5)
#adding a new column, and inserting content
gdp.pc["MY_NEW_COLUMN"] <- 2015:1995
#erasing a column
gdp.pc$`2016-12-31`<- NULL
#changing the names of the columns
names(gdp.pc) <- c("gdp per capita", "date")
#changing order of columns
gdp.pc[,c(2,1)]
#checking the class of the varibles
sapply(gdp.pc, class)
#importing data on Singapore's bottom 90% average income, selecting only the time span of interest
bottom <- read.csv('/Users/emiliasicari/Desktop/Third-assignment-/ObservationData_zqpldgb.csv', header = TRUE, skip = 20)
#erasing columns
bottom$Singapore <- NULL
bottom$Bottom.90..average.income <- NULL
bottom$Real.2010.Singapore.Dollars <- NULL
bottom$X1.1.1994.12.00.00.AM <- NULL
#adding a new column and inserting content
bottom["MY_NEW_COLUMN"] <- 1995:2009
#rename columns
names(bottom) <- c("bottom", "date")
#reorder columns
bottom[,c(2,1)]
#checking the class of the varibles
sapply(bottom, class)
#forecasrting the bottom 90% average income for the missing years (2010-2015) and creating a dataframe with the forecasted values
Forecast <- lm(bottom  ~ date, data = bottom)
116.7*2010+(-204924.2) #forcasted bottom 90% average income for 2010
116.7*2011+(-204924.2) #forcasted bottom 90% average income for 2011
116.7*2012+(-204924.2) #forcasted bottom 90% average income for 2012
116.7*2013+(-204924.2) #forcasted bottom 90% average income for 2013
116.7*2014+(-204924.2) #forcasted bottom 90% average income for 2014
116.7*2015+(-204924.2) #forcasted bottom 90% average income for 2015
new.bottom <- data.frame(date = c(2010, 2011, 2012, 2013, 2014, 2015), bottom = c(29642.8, 29759.5, 29876.2, 29992.9, 30109.6, 30226.3)) #creating a new dataframe with the forecastedvalues
new.bottom #visualising the new dataframe
#binding the new.bottom dataframe with the original bottom dataframe
bottom.complete <- rbind(bottom, new.bottom)
#importing data on Singapore's top 10% average income, selecting only the time span of interest
top <-read.csv('/Users/emiliasicari/Desktop/Third-assignment-/ObservationData_rblkfmd.csv', header = TRUE, skip = 20)
#erasing columns
top$Singapore <- NULL
top$Top.10..average.income <- NULL
top$Real.2010.Singapore.Dollars <- NULL
top$X1.1.1994.12.00.00.AM <- NULL
#adding a new column and inserting content
top["MY_NEW_COLUMN"] <- 1995:2009
#rename columns
names(top) <- c("top", "date")
#reorder columns
top[,c(2,1)]
#checking the class of the varibles
sapply(top, class)
#forecasrting the top 10% average income for the missing years (2010-2015) and creating a dataframe with the forecasted values
Forecast2 <- lm(top ~ date, data = top)
Forecast2
6312*2010-12476918  #forcasted top 10% average income for 2010
6312*2011-12476918  #forcasted top 10% average income for 2011
6312*2012-12476918  #forcasted top 10% average income for 2012
6312*2013-12476918  #forcasted top 10% average income for 2013
6312*2014-12476918  #forcasted top 10% average income for 2014
6312*2015-12476918  #forcasted top 10% average income for 2015
new.top <- data.frame(date = c(2010, 2011, 2012, 2013, 2014, 2015), top = c(210202, 216514, 222826, 229138, 235450, 241762)) #creating a new dataframe with the forecastedvalues
new.top #visualising the new dataframe
#binding the new.top dataframe with the original top dataframe
top.complete <- rbind(top, new.top)
#Downloading data set for public transport utilisation (from 1995 to 2015)
a <- "https://data.gov.sg/dataset/7f0661dc-6e4f-460f-8e8c-3514c9a8cb6b/resource/552b8662-3cbc-48c0-9fbb-abdc07fb377a/download/public-transport-utilisation-average-public-transport-ridership.csv"
trans.ut <- repmis::source_data(a)
#Changing the name of the colums
names(trans.ut) <- c("year","type","average.1000.day")
#Checking the class of the data
sapply(trans.ut, class)
# Subsetting the "trans.ut file" to make it compatible with the other data and foreseeing the merging process
trans.ut.mrt <- data.frame(subset(trans.ut, type == "MRT"))
trans.ut.bus <- data.frame(subset(trans.ut, type == "Bus"))
trans.ut.lrt <- data.frame(subset(trans.ut, type == "LRT"))
trans.ut.taxi <- data.frame(subset(trans.ut, type == "Taxi"))
#Downloading data for car population (from 1965 to 2015)
b <- "https://data.gov.sg/dataset/e2673131-f79f-43e3-9579-c17cc25e1735/resource/31ca0cee-6d9e-453a-8b4f-376d37713a10/download/motor-vehicle-population-by-type-of-vehicle-end-of-period-annual.csv"
car.pop <- repmis::source_data(b)
#Changing the name of the colums
names(car.pop) <- c("year", "type", "number")
# Eliminating the years that are not compatible with the other data sets
car.pop1 <- data.frame(subset(car.pop, year > "1994"))
mean(car.pop1$number)
#Checking the class of the data
sapply(car.pop1, class)
#Transform the data of one of the columns that have been imported as characters
car.pop1 <- transform(car.pop1, number = as.numeric(number))
# Subsetting the "car.pop1 file" to make it compatible with the other data and foreseeing the merging process
car.pop1.cars <- data.frame(subset(car.pop1, type == "Cars"))
car.pop1.rentalcars <- data.frame(subset(car.pop1, type == "Rental Cars"))
car.pop1.taxis <- data.frame(subset(car.pop1, type == "Taxis"))
car.pop1.buses <- data.frame(subset(car.pop1, type == "Buses"))
car.pop1.motorbikes <- data.frame(subset(car.pop1, type == "Motorcycles & Scooters"))
car.pop1.other <- data.frame(subset(car.pop1, type == "Goods & Other Vehicles"))
View(car.pop)
View(car.pop1)
View(car.pop1.buses)
View(car.pop1.buses)
View(car.pop1.cars)
View(car.pop1.motorbikes)
View(car.pop1.other)
View(car.pop1.rentalcars)
View(car.pop1.taxis)
View(gdp.pc)
View(trans.ut)
View(trans.ut.bus)
View(trans.ut.bus)
View(trans.ut.lrt)
View(trans.ut.mrt)
View(trans.ut.taxi)
trans.ut.lrt1 <- data.frame(year = c(1995,1996,1997,1998), type = c("LRT", "LRT","LRT", "LRT"), average.1000.day = c(0,0,0))
trans.ut.lrt1 <- data.frame(year = c(1995,1996,1997,1998), type = c("LRT", "LRT","LRT", "LRT"), average.1000.day = c(0,0,0,0))
trans.ut.lrt2 <- rbind(trans.ut.lrt, trans.ut.lrt1)
View(trans.ut.taxi)
View(trans.ut.taxi)
View(trans.ut.mrt)
View(trans.ut.lrt2)
trans.ut.lrt2
View(trans.ut.lrt2)
