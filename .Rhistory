hist(swiss$Examination,main = 'Swiss Canton Draftee Examination Scores (1888)',xlab = '% r
mean(swiss$Examination)
mean(swiss$Examination)
xlab = '% receiving highest mark on army exam')
hist(swiss$Examination,
main = 'Swiss Canton Draftee Examination Scores (1888)',
xlab = '% receiving highest mark on army exam')
mean(swiss$Examination)
median(swiss$Examination)
data(swiss)
?(swiss)
names(swiss)
head(swiss[1:3, 1:4])
fun_mean<-function(x){sum(x)/length(x)}
fun_mean(x=swiss$Examination)
hist(swiss$Examination)
hist(swiss$Examination,
main = 'Swiss Canton Draftee Examination Scores (1888)',
xlab = '% receiving highest mark on army exam')
mean(swiss$Examination)
median(swiss$Examination)
devtools::source_url('http://bit.ly/OTWEGS')
plot(MortalityGDP$region, xlab = 'Region')
plot(MortalityGDP$region, xlab = 'Region')
plot(MortalityGDP$region,xlab='Region')
range(swiss$Examination)
summary(swiss$Examination)
IQR(swiss$Examination)
boxplot(swiss$Examination, main = '% of Draftees with Highest Mark')
var(swiss$Examination)
sd(swiss$Examination)
sd_error <- function(x) {
sd(x) / sqrt(length(x))
}
sd_error(swiss$Examination)
Normal30 <- rnorm(1e+6, mean = 50, sd = 30)
hist(swiss$Education, main = '')
Normal30 <- rnorm(1e+6, mean = 50, sd = 30)
Normal30<-rnorm(1e+6, mean = 50, sd = 30)
log(swiss$Education) %>% hist(main = "Swiss Education")
plot(log(swiss$Education), swiss$Examination)
cor.test(log(swiss$Education), swiss$Examination)
ggplot2::ggplot(swiss, aes(log(Education), Examination)) +
geom_point() + geom_smooth() + theme_bw()
data("AirPassengers")
?AirPassengers
names(AirPassengers)
names(AirPassengers)
head(AirPassengers[1:3,1:4])
library(dplyr)
library(dplyr).
sessionInfo()
hist(women$weight)
hist(women$weight, freq = FALSE)
women<-row.names(x)
mean(women$height)
data("women")
data("women")
?women
main = "women data: American women aged 30-39")
main = "American women aged 30-39")
main = women)
library(rvest)
library(dplyr)
install.packages(rvest)
library(rvest)
URL <- http://www.bbc.com/sport/winter-olympics/2014/medals/countries
install.packages(rvest)
library(dplyr)
library(rvest)
install.packages("rvest")
library(rvest)
URL <- http://www.bbc.com/sport/winter-olympics/2014/medals/countries
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
ExpensesTable <- URL %>% read_html() %>%
html_nodes('#expenses_table') %>%
html_table() %>%
as.data.frame
View(combined)
View(ExpensesTable)
html_nodes('#medals_table') %>%
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals_table_wrapper') %>%
html_table() %>%
as.data.frame
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals-table_table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URL %>% read_html() %>%
html_nodes('#class="medals-table__table"') %>%
html_table() %>%
as.data.frame
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
descending <- arrange(min_max_medal, desc(max_medal))
head(descending)[1:26, ]
descending <- arrange(min_max_country, desc(max_country))
head(descending)[1:26, ]
descending <- arrange(MedalsTable, desc(Total))
head(DescTotalMedal)
DescTotalMedal <- arrange(MedalsTable, desc(Total))
head(DescTotalMedal)
toBibtex(citation())
toBibtex(citation())
toc: true
toc_depth: 2
getwd()
setwd("/Users/emiliasicari/Third-assignment-")
possible_dir <- a('user/emiliasicari/desktop/Third-assignment-)
getwd()
getwd()
setwd('/Users/emiliasicari/Desktop/Third-assignment-/)
setwd('/Users/emiliasicari/Desktop/Third-assignment-/)
setwd('/Users/emiliasicari/Desktop/Third-assignment-/')
setwd("/Users/emiliasicari/Desktop/Third-assignment-")
try(setwd("/Users/emiliasicari/Desktop/Third-assignment-"), silent = TRUE)
library(ggplot2)
library(repmis)
```
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("devtools")
library(devtools)
install.packages('quandl/R-package')
install_github('quandl/R-package')
install_github(('quandl/R-package'), force=TRUE)
library(Quandl)
Quandl("ODA/SGP_NGDPPC")
Quandl("ODA/SGP_NGDPPC", start_date="1960-12-31", end_date="2015-12-31")
Quandl("CLIO/SGP_II", start_date="1960-12-30", end_date="2015-12-31")
Quandl("CLIO/SGP_II", collapse="annual", start_date="1960-12-31", end_date="2015-12-31")
install.packages(gdata)
install.packages("gdata")
library(gdata)
mydata = read.csv("ObservationData_czordzd.csv")
mydata = read.csInco("ParetoLorenzSingapore.csv")
mydata = read.csv("ParetoLorenzSingapore.csv")
> mydata = read.csv("ParetoLorenzSingapore.csv")
mydata = read.csv("ParetoLorenzSingapore.csv")
mydata = read.csv('ParetoLorenzSingapore.csv')
try(setwd("/Users/emiliasicari/Desktop/Third-assignment-"), silent = TRUE)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github(('quandl/R-package'), force=TRUE)
library(Quandl)
A <- "ObservationData_czordzd.csv"
main <- repmis::source_data(A)
A <- "http://knoema.com/user/download?id=101005"
main <- repmis::source_data(A)
library(gdata)
ObservationData_yzywbke.xlsx = read.xls("ObservationData_yzywbke.xlsx")
mydata = read.xls("ObservationData_yzywbke.xlsx")
URL <- "http://knoema.com/mzqtlyd/the-worlds-top-incomes-database?tsId=1010250&action=download"
temp <- tempfile()
download.file(http://knoema.com/mzqtlyd/the-worlds-top-incomes-database?tsId=1010250&action=download, temp)
download.file(http://knoema.com/mzqtlyd/the-worlds-top-incomes-database?tsId=1010250&action=download, temp)
download.file(URL, temp)
SingaporeIncomeInequality <- read.csv(gzfile(temp, "ObservationData_czordzd.csv"))
SingaporeIncomeInequality <- read.csv(temp, "ObservationData_czordzd.csv")
ObservationData <- read.csv(gzfile(temp, "ObservationData_czordzd.csv"))
temp <- tempfile(ObservationData_czordzd.zip)
temp <- tempfile("ObservationData_czordzd.zip")
download.file(URL, temp)
ObservationData <- read.csv(gzfile(temp, "ObservationData_czordzd.csv"))
temp <- tempfile('ObservationData_czordzd.zip')
download.file(URL, temp)
ObservationData <- read.csv(gzfile(temp, "ObservationData_czordzd.csv"))
ObservationData <- read.csv(gzfile(temp, "ObservationData_czordzd.csv"))
ObservationData <- read.csv(file(temp, "ObservationData_czordzd.csv"))
ObservationData <- read.csv(file = temp, "ObservationData_czordzd.csv"))
ObservationData <- read.csv(file = temp, "ObservationData_czordzd.csv")
ObservationData <- read.csv(file = temp, "ObservationData_czordzd.csv", header=TRUE, sep=",")
ObservationData <- read.csv(file = temp, "ObservationData_czordzd.csv", header=TRUE)
MyData <- read.csv(file = temp, "ObservationData_czordzd.csv")
MyData <- read.csv(file (temp, "ObservationData_czordzd.csv"))
getwd()
setwd("/Users/emiliasicari/Desktop/Third-assignment-"")
setwd("/Users/emiliasicari/Desktop/Third-assignment-")
setwd('/Users/emiliasicari/Desktop/Third-assignment-')
MyData <- read.csv(file="ObservationData_czordzd.csv")
MyData <- read.csv(file="ObservationData_czordzd.csv")
MyData <- read.csv(file="ObservationData_czordzd.csv", header=TRUE, sep=",")
View(MyData)
try(setwd('/Users/emiliasicari/Desktop/Third-assignment-'))
library(devtools)
library(Quandl)
getwd()
try(setwd('/Users/emiliasicari/Desktop/Third-assignment-'))
MyData <- read.csv2(file="ObservationData_czordzd.csv", header=TRUE, sep=",")
View(MyData)
MyData <- read.csv(file="ObservationData_czordzd.csv", header=TRUE, sep=",")
A <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(A)
main <- repmis::source_data(EconomicGrowth)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL)
View(MyData)
View(ObservationData)
View(MedalsTable)
View(main)
View(main)
View(MyData)
MyData <- read.csv(file="ObservationData_wvdxeeg.csv", header=TRUE, sep=",")
install-install.packages(tydyr)
install.packages(tydyr)
install.packages(tidyr)
library(tidyr)
install.packages('tidyr')
library(tidyr)
MyData <- read.csv(file="ObservationData_wvdxeeg.csv", header=TRUE, sep=",")
View(MyData)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL)
View(main)
tidy <- gather(data, values)
library(bibtex)
MyData <- read.csv(file="ObservationData_wvdxeeg.csv", header=TRUE, sep=",", package='testdat')
install.packages('testdat')
MyData <- read.csv2(file="ObservationData_wvdxeeg.csv", header=TRUE, sep=",")
View(MyData)
summary(MyData)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL)
View(main)
View(MyData)
person = c("Singapore")
View(main)
messy <- data.frame(
person = c("Singapore"),
)
View(main)
messy <- main(
person = c("Singapore"),
)
messy <- URL(
person = c("Singapore"),
)
as.data.frame(main)
nrow(12)
data <- read.table('main', nrows = 30)
read.table('main', nrows = 30)
dim(main)
main <- repmis::source_data(URL)
main <- repmis::source_data(URL, header = TRUE)
View(main)
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip(11))
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
View(main)
main <-data.frame(Singapore=1:30, date=(2010-12-31))
View(main)
main <-data.frame(Singapore=1:30)
View(main)
as.data.frame(main)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
View(main)
as.data.frame(main)
as.data.frame(main, header = TRUE)
read.table(main)
read.table(URL)
data.frame(main)
messy <- data.frame(
person = c("Singapore"),
date = c(X2010.12.31),
gdp = c(X63497.758)
)
messy <- data.frame(
person = c("Singapore"),
)
main <- repmis::source_data(URL)
View(MyData)
MyData <- read.csv2(file="ObservationData_wvdxeeg.csv", header=TRUE, nrows = 17, skip = 32)
View(MyData)
MyData <- read.csv2(file="ObservationData_wvdxeeg.csv", header=TRUE, sep = ",", nrows = 17, skip = 32)
View(MyData)
main <- repmis::source_data(URL, header = TRUE, sep = "," nrow(30), skip = 11)
main <- repmis::source_data(URL, header = TRUE, sep = "," nrow(30), skip = 11)
View(main)
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
View(main)
View(main)
as.data.frame(main)
as.data.frame(main)
matrix(main)
data.frame(main)
data()
?WorldPhones
p<- WorldPhones
library(reshape)
library(ggplot2)
library(corrgram)
ph <- cbind(Year = rownames(p), p)
rownames(ph) <- NULL
summary(pho)
colnames(main)[colnames(main)=="X2010.12.31"] <- "Date"
View(main)
View(main)
library(data.table)
setnames(data, old=c("X2010.12.31", "X63497.758"), new=c("date", "gdppercapita"))
setnames(main, old=c("X2010.12.31", "X63497.758"), new=c("date", "gdppercapita"))
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
data.frame(main)
names(main) <- c("date", "gdp")
View(main)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
data.frame(main)
names(main) <- c("date", "gdp per capita")
View(main)
summary()
summary(main)
row.names("Singapore")
View(main)
row.names(Singapore)
row.names(main)
row.names(main) <- Singapore
row.names(main, do.NULL = FALSE, prefix = "Singapore")
row.names(main, do.NULL = FALSE)
row.names(main)
row.names(main) <- c("Singapore")
row.names(main) <- c("singapore")
row.names(main) <- c("Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore,Singapore")
#importing data on income inequality, selecting only the time span of interest
row.names(main) <- value("Singapore")
row.names(main) <- r("Singapore")
row.names(main) <- c("Singapore")
row.names(main)[1:30]
row.names(main)[1:30]='Singapore'
data.frame(MyData)
View(MyData)
names(MyData) <- c("ParetoLorenzCoefficient")
View(MyData)
data.frame(MyData)
names(MyData) <- c("country", "inverted pareto lorenz coefficient", "unit", "date", "inequality")
View(MyData)
summary(MyData)
data.frame(MyData)
MyData <- read.csv2(file="ObservationData_wvdxeeg.csv", header=TRUE, sep = ",", nrows = 17, skip = 32)
#showing data as data frame
data.frame(MyData)
names(MyData) <- c("country", "inverted pareto lorenz coefficient", "unit", "date", "inequality")
data.frame(MyData)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
#showing data as data frame
data.frame(main)
#changing the names of the columns
names(main) <- c("Singapore", "date", "gdp per capita")
View(main)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
#showing data as data frame
data.frame(main)
#changing the names of the columns
names(main) <- c("date", "gdp per capita")
View(main)
View(main)
View(main)
View(main)
View(MyData)
main["MY_NEW_COLUMN"] <- NA
View(main)
main["MY_NEW_COLUMN"] <- NA='Singapore'
main["MY_NEW_COLUMN"] <- NA = "Singapore"
main["MY_NEW_COLUMN"] <- NA(Singapore)
main["MY_NEW_COLUMN"] <- NA
$MY_NEW_COLUMN <- Singapore
main$MY_NEW_COLUMN <- Singapore
names(main) <- c("date", "gdp per capita", country)
names(main) <- c("date", "gdp per capita", "country")
View(main)
main$MY_NEW_COLUMN <- singapore
names(main) <- c("date", "gdp per capita", "country"
names(main) <- c("date", "gdp per capita", "country")
main$country<-singapore
main["MY_NEW_COLUMN"] <- singapore
main["MY_NEW_COLUMN"] <- 'singapore'
names(main) <- c("date", "gdp per capita", "country")
View(main)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
main <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
#showing data as data frame
data.frame(main)
#adding a new column, and inserting content
main["MY_NEW_COLUMN"] <- 'singapore'
View(main)
names(main) <- c("date", "gdp per capita","country")
View(main)
View(main)
main2[,c(3,1,2)]
main[,c(3,1,2)]
main[,c(3,2,1)]
View(MyData)
MyData[,c(1,2,4,3,5)]
View(MyData)
MyData <- read.csv2(file="ObservationData_wvdxeeg.csv", header=TRUE, sep = ",", nrows = 17, skip = 32)
#showing data as data frame
data.frame(MyData)
#changing the names of the columns
names(MyData) <- c("country", "inverted pareto lorenz coefficient", "unit", "date", "inequality")
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
gdp.pc <- repmis::source_data(URL, header = TRUE, nrows=21, skip = 5)
#showing data as data frame
data.frame(gdp.pc)
#adding a new column, and inserting content
gdp.pc["MY_NEW_COLUMN"] <- 2015:1995
#erasing a column
gdp.pc$`2016-12-31`<- NULL
#changing the names of the columns
names(gdp.pc) <- c("gdp per capita", "date")
#changing order of columns
gdp.pc[,c(2,1)]
#checking the class of the varibles
sapply(gdp.pc, class)
View(gdp.pc)
bottom <- read.csv('/Users/emiliasicari/Desktop/Third-assignment-/ObservationData_zqpldgb.csv', header = TRUE, skip = 20)
#erasing columns
bottom$Singapore <- NULL
bottom$Bottom.90..average.income <- NULL
bottom$Real.2010.Singapore.Dollars <- NULL
bottom$X1.1.1994.12.00.00.AM <- NULL
#adding a new column and inserting content
bottom["MY_NEW_COLUMN"] <- 1995:2009
#rename columns
names(bottom) <- c("bottom", "date")
#reorder columns
bottom[,c(2,1)]
#checking the class of the varibles
sapply(bottom, class)
#forecasrting the bottom 90% average income for the missing years (2010-2015) and creating a dataframe with the forecasted values
Forecast <- lm(bottom  ~ date, data = bottom)
116.7*2010+(-204924.2) #forcasted bottom 90% average income for 2010
116.7*2011+(-204924.2) #forcasted bottom 90% average income for 2011
116.7*2012+(-204924.2) #forcasted bottom 90% average income for 2012
116.7*2013+(-204924.2) #forcasted bottom 90% average income for 2013
116.7*2014+(-204924.2) #forcasted bottom 90% average income for 2014
116.7*2015+(-204924.2) #forcasted bottom 90% average income for 2015
new.bottom <- data.frame(date = c(2010, 2011, 2012, 2013, 2014, 2015), bottom = c(29642.8, 29759.5, 29876.2, 29992.9, 30109.6, 30226.3)) #creating a new dataframe with the forecastedvalues
new.bottom #visualising the new dataframe
#binding the new.bottom dataframe with the original bottom dataframe
bottom.complete <- rbind(bottom, new.bottom)
View(bottom)
View(bottom.complete)
View(new.bottom)
top <-read.csv('/Users/emiliasicari/Desktop/Third-assignment-/ObservationData_rblkfmd.csv', header = TRUE, skip = 20)
#erasing columns
top$Singapore <- NULL
top$Top.10..average.income <- NULL
top$Real.2010.Singapore.Dollars <- NULL
top$X1.1.1994.12.00.00.AM <- NULL
#adding a new column and inserting content
top["MY_NEW_COLUMN"] <- 1995:2009
#rename columns
names(top) <- c("top", "date")
#reorder columns
top[,c(2,1)]
#checking the class of the varibles
sapply(top, class)
#forecasrting the top 10% average income for the missing years (2010-2015) and creating a dataframe with the forecasted values
Forecast2 <- lm(top ~ date, data = top)
Forecast2
6312*2010-12476918  #forcasted top 10% average income for 2010
6312*2011-12476918  #forcasted top 10% average income for 2011
6312*2012-12476918  #forcasted top 10% average income for 2012
6312*2013-12476918  #forcasted top 10% average income for 2013
6312*2014-12476918  #forcasted top 10% average income for 2014
6312*2015-12476918  #forcasted top 10% average income for 2015
new.top <- data.frame(date = c(2010, 2011, 2012, 2013, 2014, 2015), top = c(210202, 216514, 222826, 229138, 235450, 241762)) #creating a new dataframe with the forecastedvalues
new.top #visualising the new dataframe
#binding the new.top dataframe with the original top dataframe
top.complete <- rbind(top, new.top)
View(top)
View(new.top)
View(top.complete)
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
gdp.pc <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
# showing data as data frame
data.frame(main)
#adding a new column, and inserting content
gdp.pc["MY_NEW_COLUMN"] <- 2015:1995
#erasing a column
gdp.pc$`2016-12-31`<- NULL
#changing the names of the columns
names(main) <- c("date", "gdp per capita","country")
#changing order of columns
URL <- "https://www.quandl.com/api/v3/datasets/ODA/SGP_NGDPPC.csv"
gdp.pc <- repmis::source_data(URL, header = TRUE, nrow(30), skip = 11)
View(gdp.pc)
data.frame(main)
gdp.pc["MY_NEW_COLUMN"] <- 2015:1995
gdp.pc <- repmis::source_data(URL, header = TRUE, nrows=30), skip = 11)
gdp.pc <- repmis::source_data(URL, header = TRUE, nrows=21, skip = 5)
View(gdp.pc)
gdp.pc["MY_NEW_COLUMN"] <- 2015:1995
View(gdp.pc)
gdp.pc$`2016-12-31`<- NULL
names(gdp.pc) <- c("gdp per capita", "date")
gdp.pc[,c(2,1)]
sapply(gdp.pc, class)
View(gdp.pc)
